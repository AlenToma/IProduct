@model IProduct.Modules.Library.PageSection
@using EntityWorker.Core.Helper
<div class="section flex @Model.ProductShow  @Model.Id">
    @if (Model.PageType != IProduct.Modules.PageType.Product)
    {
        <p>Error Only Section with SectionType Product is allowed</p>
    }

</div>
<script>
        $(document).ready(function ()
        {
                var section = $(".@Model.Id").last();
                var data =  @Html.Raw(Model.ToJson(new EntityWorker.Core.Object.Library.JSON.JSONParameters() { JsonFormatting = JsonFormatting.CamelCase, UseFastGuid= false }));
            var categories = [];
            var tbSettings = { append: false, executed: false };
            var slider = undefined;
            var time;
            var design = global.partial("Product_" + data.productShow);
            if(data.productShow === "Table")
                design = global.partial("Product_" + data.productShow, ".product-table-wrapper");
            var onScroll  = function ()
            {
                if(tbSettings.executed)
                if(tbSettings.totalPages > tbSettings.selectedPage)
                {
                    tbSettings.executed = false;
                    tbSettings.selectedPage++;
                    tbSettings.append = true;
                    loadProducts();
                }
            };

                $.each(data.pageCategories, function ()
                {
                    categories.push(this.category_Id);
                });

                function loadProducts()
                {
                    var settings = $.extend({
                        result: null
                }, tbSettings);
                (section.children("div").length <= 0 || tbSettings.append === false ? section : section.children("div:last-child")).ax({
                        url: '@Url.Action("GetProducts", "Home")',
                        data: JSON.stringify({ tbSettings: settings, categoriesId: categories }),
                        success: function (data)
                        {
                            if(tbSettings.totalPages == undefined)
                                tbSettings = $.extend(tbSettings, data);
                            else
                            {
                                tbSettings.result = data.result;
                            }
                            render();
                        }
                    });
                }

                function render()
                {
                    if(!tbSettings.append)
                        section.html("");
                    if(data.productShow == "ImageGrid" || data.productShow == "Slider")
                    {

                        var divs = [];
                        $.each(tbSettings.result, function ()
                        {
                            var x = this;
                            var src = "/Content/Image/info.png";
                            var description = isNullOrEmpty(this.description) ? "" : this.description;
                            var url = '@Url.Action("Product", "Home", null, Request.Url.Scheme)' + "?id=" + this.id;
                            if(x.images.length > 0)
                                src = '@Url.Action("index", "Home", null, Request.Url.Scheme)' + x.images[0].images.fileThumpFullPath

                            var div = $(design
                                .translate("Url", url)
                                .translate("Src", src)
                                .translate("Title", x.name)
                                .translate("Description", description)
                                .translate("Price", this.price.formatMoney() + ":-"));

                            div.find(".m-button").click(function ()
                            {
                                shoppingCart.add(x.id, 1);
                            });

                            if(data.productShow === "Slider")
                                divs.push($("<div/>").append(div));
                            else divs.push(div);
                        });

                        if(data.productShow === "Slider" && slider != undefined)
                        {
                            section.slick('slickAdd', divs);
                        } else section.append(divs);

                        if(data.productShow === "Slider" && slider === undefined)
                        {
                            slider = section.slick({
                                slidesToShow: 3,
                                slidesToScroll: 1,
                                autoplay: true,
                                arrows: true,
                                autoplaySpeed: 4000,
                                centerMode: true,
                                variableWidth: true,
                                infinite: true,
                            });

                            section.find(".slick-next").click(function ()
                            {
                                clearTimeout(time);
                                time= setTimeout(onScroll, 0);
                            });
                        }

                    } else if(data.productShow === "Table") // End of Image Grid & Slider and start of Table View
                    {

                        if(!tbSettings.append)
                        {
                            var header = $(global.partial("Product_" + data.productShow, ".product-table-header")
                                .translate("Item_Text_0,Item_Value_0", "Recommended")
                                .translate("Item_Text_1,Item_Value_1", "Name")
                                .translate("Item_Text_2,Item_Value_2", "Price")
                                .translate("Selected", "Recommended"));

                            if(!isNullOrEmpty(tbSettings.sortColumn))
                                header.find(".dropbtn").attr("value", tbSettings.sortColumn);
                            header.find(".dropdown-menu a").click(function ()
                            {
                                tbSettings.sortColumn = $(this).attr("value");
                                tbSettings.selectedPage = 1;
                                tbSettings.append = false;
                                loadProducts();
                            });


                            section.append(header);
                        }

                        $.each(tbSettings.result, function ()
                        {
                            var x = this;
                            var src = "/Content/Image/info.png";
                            var description = isNullOrEmpty(this.description) ? "" : this.description;
                            var url = '@Url.Action("Product", "Home", null, Request.Url.Scheme)' + "?id=" + this.id;
                            if(x.images.length > 0)
                                src = '@Url.Action("index", "Home", null, Request.Url.Scheme)' + x.images[0].images.fileThumpFullPath;

                            var div = $(design
                                .translate("Url", url)
                                .translate("Src", src)
                                .translate("Title", x.name)
                                .translate("Description", description)
                                .translate("Price", this.price.formatMoney() + ":-"));

                            div.find(".m-button").click(function ()
                            {
                                shoppingCart.add(x.id, 1);
                            });
                            section.append(div);

                        });
                    } // end of table view
                    btnLoadable();
                    tbSettings.append = true;
                    tbSettings.executed = true;

                };

            loadProducts();

            if(data.productShow !== "Slider")
            {
                $(window).scroll(function (event)
                {
                    clearTimeout(time);
                    if(Math.round($(window).scrollTop()) + $(window).innerHeight() == $(document).height())
                        time = setTimeout(onScroll, 100);
                });
            }

        });
</script>
