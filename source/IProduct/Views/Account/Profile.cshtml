@model IProduct.Modules.Library.Custom.GenericView<IProduct.Modules.Library.User>
@using IProduct.Models;
@{
    Layout = "";
}

<div id="signupForm" class="signupForm">
    @if (!Model.Success && Model.GetHtmlError() != null)
    {
        <div class="error">
            @Html.Raw(Model.GetHtmlError())
        </div>
    }
    else
    {
        if (Model.Success)
        {
            <div class="success">
                @Html.Raw(Model.SuccessMessage)
            </div>
        }
    }

    @using (Ajax.BeginForm("Profile", "Account", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "signupForm" }))
    {
        @Html.HiddenFor(x => x.View.Id);
        <div class="user-form form">
            <div class="form-group">
                @Html.LabelFor(model => model.View.Email)
                @Html.TextBoxFor(model => model.View.Email, new { @class = "form-control", placeholder = "Email", required = true })
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.View.Password)
                    @Html.PasswordFor(model => model.View.Password, new { @class = "form-control", placeholder = "Password", required = true })
                </div>
                <div class="form-group col-md-6">
                    @Html.Label("Confirm Password")
                    @Html.PasswordFor(model => model.Option_1, new { @class = "form-control", placeholder = "Confirm Password", required = true })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.View.Person.FirstName)
                    @Html.TextBoxFor(model => model.View.Person.FirstName, new { @class = "form-control", placeholder = "FirstName", required = true })
                </div>

                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.View.Person.LastName)
                    @Html.TextBoxFor(model => model.View.Person.LastName, new { @class = "form-control", placeholder = "LastName", required = true })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.View.Person.PhoneNumber)
                    @Html.TextBoxFor(model => model.View.Person.PhoneNumber, new { @class = "form-control", placeholder = "PhoneNumber" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Address")
                @Html.TextBoxFor(model => model.View.Person.Address.AddressLine, new { @class = "form-control", placeholder = "Address", required = true })
            </div>

            <div class="form-group">
                @Html.Label("AddressLine 2")
                @Html.TextBoxFor(model => model.View.Person.Address.AddressLine2, new { @class = "form-control", placeholder = "AddressLine 2" })

            </div>

            <div class="form-group">
                @Html.Label("Country")
                @Html.AutoFillFor(model => model.View.Person.Address.Country_Id, new IProduct.Models.Controls.AutoFillForSettings("id", "name", Url.Action("GetCountryComboBoxItems", "Admin", null, Request.Url.Scheme)))
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.Label("City")
                    @Html.TextBoxFor(model => model.View.Person.Address.City, new { @class = "form-control", placeholder = "City" })
                </div>

                <div class="form-group col-md-3 required">
                    @Html.LabelFor(model => model.View.Person.Address.State)
                    @Html.TextBoxFor(model => model.View.Person.Address.State, new { @class = "form-control", placeholder = "State" })
                </div>

                <div class="form-group col-md-3 ">
                    @Html.Label("Zip")
                    @Html.TextBoxFor(model => model.View.Person.Address.Code, new { @class = "form-control", placeholder = "Zip" })
                </div>
            </div>
        </div>
        <hr />
        <button type="submit" class="m-button loginBtn--signin float-lg-right">
            Save
        </button>
    }
</div>

