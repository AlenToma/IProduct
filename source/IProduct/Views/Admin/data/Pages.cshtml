
<div class="header" id="pagesHeader">
    Manage Pages
    <span>Add Page</span>
</div>
<div class="pages">
    Pages
</div>

<script>


    function edit(item) {

        Partial("data/AddPage.cshtml", function (block) {
            var dialog = $("body").dialog({
                title: "Edit/Add Page",
                data: block,
                onCancel: function () { pages.body(); },
                buttons: [{
                    text: "Save",
                    click: function () {
                        var result = validate();
                        if (result != false) {
                            $(".body").ax({
                                url: '@Url.Action("SavePages", "Admin")',
                                data: JSON.stringify(result),
                                success: function (data) {
                                    pages.body();
                                    dialog.Hide();
                                }
                            });
                        }
                        return false;
                    }
                }]
        }).Show();
            editPages(item);
        });
    }

    $("#pagesHeader > span").click(function () {
        edit();
    })
    var columns = [{
        data: "name",
        header: "Name"
    },
    {
        data: "order",
        header:"Order",
        sortable: true
    },
    {
        header: "Parent",
        data: function (item) {
            var result = undefined;
            if (isNullOrEmpty(item.parent_id))
                return "";
            $(".pages").ax({
                url: '@Url.Action("GetPagesComboBoxItems", "Admin")',
                data: JSON.stringify({ value: item.parent_id }),
                async: false,
                success: function (data) {
                    result = data[0];
                }
            });

            if (result)
                return result.name;
        },
        sortable: false
        }, {
        data: function (d) {
            if (d.isactive)
                return "YES";
            return "NO";
        },
        header: "IsVisible",
        sortable: false
        }];

    var pages = $(".pages").treeView({
        onEdit: function (item) { edit(item); },
        onDelete: function (item) {
             confirm("Are you sure?", function () {
                $(".pages").ax({
                    url: '@Url.Action("DeletePages", "Admin")',
                    data: JSON.stringify({ itemId: item.id }),
                    async: false,
                    success: function (data) {
                        pages.body();
                    }
                });
              }, $(".pages"));
        },
        data: function (settings) {
            var result = "";
            if (!settings)
                return [];
            $(".pages").ax({
                url: '@Url.Action("GetPages", "Admin")',
                data: JSON.stringify( settings),
                async: false,
                success: function (data) {
                    settings.totalPages = data.totalpages;
                    result = data.result;
                }
            })
            return result;

        },
        pageSize: 20,
        columns: columns,
    });
</script>